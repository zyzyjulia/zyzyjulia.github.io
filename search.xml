<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>一万小时</title>
      <link href="/uncategorized/10000-hours/"/>
      <url>/uncategorized/10000-hours/</url>
      
        <content type="html"><![CDATA[<p>长久以来都有一个街头卖艺的小愿望，不记得从哪里看到或者听到一个理论，大概是说想完全掌握一门技艺须得练习10000小时，总言之跟“台上一分钟，台下十年功”的老话一个意思。</p><p>我认真算了下，假设我能坚持每天练琴一小时，周六周日总归是要休息的，那么一周练习时间算作5小时，10000/5=2000周，500月，41.7年。。。一个七十岁，步履已蹒跚，颤颤巍巍着当街卖艺的老太太，为什么？</p><p>Something must be wrong…</p><p>那么只能试试先设定一个时限，8年好了，凑个整100个月，400周，每周练习时间须得25小时，周末自然要放松不算进去，每天就是5小时？！上班加通勤就算10小时，吃饭睡觉10小时，那只能让地球自转速度放缓些了。。。</p><p>Something must be wrong…</p><p>算来算去那只能是这个10000小时定律有问题了，思及此我打开了谷歌想看看究竟谁居心如此险恶研究出这么个数字，然后在果壳上看到了这篇<a href="https://www.guokr.com/article/437379/" target="_blank" rel="noopener">文章</a>，文中特意强调：并非在所有领域一万小时定律都是可行的。</p><p>那么问题来了，现在改表演胸口碎大石需要练习多久？</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ROS2安装与初学</title>
      <link href="/uncategorized/ros2-install-and-lerning/"/>
      <url>/uncategorized/ros2-install-and-lerning/</url>
      
        <content type="html"><![CDATA[<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>比起ROS1，ROS2不再使用master而采用DSS分布机制，节点间引入Discovery来实现交接，系统鲁棒性更好。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>目前系统是20.04，ROS2对应的支持版本是Foxy，然而要5月23日才发行正式版，deb二进制无法安装，只能通过<a href="https://index.ros.org/doc/ros2/Installation/Foxy/Linux-Development-Setup/" target="_blank" rel="noopener">源码安装</a>(Build from source)，安装过程倒没什么问题，然而之后的实践连官方教程也都是基于安装完Desktop以及面向Eloquent的，我在source完配置文件才发现这点，然后每次打开新终端都会出现提示找不到配置路径，网上提供的恢复环境变量默认值的方法多是：</p><p><del>export PATH=.:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/root/bin</del></p><p>以下是方案：</p><pre class=" language-bash"><code class="language-bash">$ vim ~/.bashrc</code></pre><p>由此可进入并看到home下shell的配置文件，找到写入的更改（一般在文末）并删除即可。在这里还可以看到终端的一些个性化配置，喜欢的化可以更改颜色窗口大小等。vim操作如果忘记网上很容易找到。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>装个电脑</title>
      <link href="/le-zi/build-pc-yourself/"/>
      <url>/le-zi/build-pc-yourself/</url>
      
        <content type="html"><![CDATA[<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>笔记本用了多年本来考虑是换个笔记本还是PC，倾向是PC但顾虑之后搬家可能会不方便，直到在油管上看到人家自己装机的视频顿时觉得我也可。组装下来确实不难，一个晚上基本可以装好，比拼一个高达简单多了，但耗费心力与时间的是购置配件与等待配件的到来，因为疫情中间还有复活节,隔了近两周才拿到所有东西。。</p><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>最难的部分，买东西太难了（流下了贫穷的泪水）。</p><ul><li>CPU：Intel or AMD， 恩我最后还是买了intel</li><li>主板：须适配CPU</li><li>RAM：根据需要，大小，DDR?以及频率</li><li>CPU风扇</li><li>硬盘：SSD，HDD</li><li>独显：根据需求</li><li>电源：重要，独显厂家会列出一些建议，CPU+独显供电之外最好还要有些盈余</li><li>机箱：适配主板，ATX很大了，拒绝光污染，侧透是好看但得是这个<a href="https://www.youtube.com/watch?v=P1XJXRfU1kc" target="_blank" rel="noopener">效果</a></li><li>外设：显示器，键盘鼠标，音箱等</li><li>无限网卡/蓝牙：可以根据主板厂商的配置购买，intel官网对Linux的支持Firmware看<a href="https://www.intel.de/content/www/de/de/support/articles/000005511/network-and-i-o/wireless-networking.html" target="_blank" rel="noopener">这里</a>,复制到/lib/firmware路径下，但我忘记买了。。此条是事后诸葛，当然还有适配器可以弥补</li></ul><h2 id="组装"><a href="#组装" class="headerlink" title="组装"></a>组装</h2><p>我一个小爱好是阅读产品说明，东西到了最好先查阅下，尤其主板。大致安装可以参照这个<a href="https://www.bilibili.com/video/BV1jE411e7hw?from=search&seid=7087817233737992940" target="_blank" rel="noopener">视频</a>,细致又简洁，遇到问题在油管输入产品及型号，可以找到一些解决方案。</p><p>有静电手环的可以佩戴没有的话事先洗下手，再准备一把螺丝刀（最好带磁，我中间有不小心将螺丝掉到显卡中），过程里最费事的对我来说是把主板安到机箱上，一个人要用力对准主板孔和IO板还要将螺丝旋入很费劲了，最好身边有个朋友帮忙固定（流下了孤独的泪水）。</p><h2 id="OS与软件"><a href="#OS与软件" class="headerlink" title="OS与软件"></a>OS与软件</h2><h3 id="BIOS设置"><a href="#BIOS设置" class="headerlink" title="BIOS设置"></a>BIOS设置</h3><p>组装完毕打开开机按钮后先进入到BIOS界面，华硕的主板是F2或者Del，EZ模式下可以看到CPU，RAM，显卡，风扇转速等各种信息，F7可以进入更多的设置界面，主板说明上有一些具体介绍，根据需求，比如风扇转速调节，超频，关机时关闭RGB光效，VT-d等功能可以在里面设置，不确定的功能最好保留原设置，UEFI启动。</p><h3 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h3><p>利用USB安装，直接用的之前制作好的装双系统的Ubuntu18.04，过程尝试了使用LVM动态分区。</p><p>系统装好后的有一天，屏幕突然冻住键鼠均无反应。<del>强制关机</del>再打开输入密码停留在紫色开屏界面进不去。。</p><p>一定不要强制关机，系统是OK的，冻屏可能原因在于<del>LVM自动分区不合理我还没有重新分配</del>，更可能的原因是显卡问题，因为无法进入图形界面。</p><p>GRUB进入recovery mode重新加载不成功。</p><p>Ctrl+alt+F1可以进入tty用户登陆界面，Ctrl+alt+F3进入命令行虚拟终端，$dmesg -w查看报错信息为：</p><p> ucsi_ccg 0-0008: failed to reset PPM!<br> ucsi_ccg 0-0008: PPM init failed (-110)</p><p>参考了这个<a href="https://askubuntu.com/questions/1155263/new-install-desktop-ubuntu-19-04-shows-error-message-ucsi-ccg-0-0008-failed-to" target="_blank" rel="noopener">答案</a>并这样<a href="https://bugs.launchpad.net/ubuntu/+source/linux/+bug/1850238" target="_blank" rel="noopener">操作</a>以后问题并没有得到解决。然后恼羞成怒的我想卸载显卡驱动重装的过程中删除了xserver的一个包，而且装不回来了。。至少我折腾一晚上没有找到解决方案。刚好20.04快发布了，于是重装系统。。重新<a href="https://ubuntu.com/tutorials/tutorial-create-a-usb-stick-on-windows#1-overview" target="_blank" rel="noopener">制作启动盘</a>，过程不再赘述，BIOS里记得修改boot项优先级从USB Drive进入。</p><h3 id="Backup"><a href="#Backup" class="headerlink" title="Backup"></a>Backup</h3><ul><li>系统备份 (Déjà Dup Backup Tool)设置成了每周一次。</li><li>又<a href="https://linuxconfig.org/ubuntu-20-04-system-backup-and-restore" target="_blank" rel="noopener">安装</a>了Timeshift每天进行一次快照，Browse位置在/run/timeshift/backup/timeshift，如果系统宕机无法进入，可以使用制作好的USB启动盘进入live session (try Ubuntu),重新安装timeshift找到存储位置并恢复。</li><li>制作clonezilla启动盘，<a href="https://clonezilla.org/downloads/download.php?branch=alternative" target="_blank" rel="noopener">下载</a>并<a href="https://zhuanlan.zhihu.com/p/45652569" target="_blank" rel="noopener">制作</a>，<a href="https://clonezilla.nchc.org.tw/clonezilla-live/" target="_blank" rel="noopener">官网描述</a>,<a href="https://www.cnblogs.com/minseo/p/10837807.html" target="_blank" rel="noopener">克隆还原</a>，另一篇<a href="https://clonezilla.nchc.org.tw/clonezilla-live/" target="_blank" rel="noopener">参考</a>。</li></ul><h3 id="VM-Workstation-Pro"><a href="#VM-Workstation-Pro" class="headerlink" title="VM Workstation Pro"></a>VM Workstation Pro</h3><p>参阅<a href="https://linuxconfig.org/how-to-install-vmware-workstation-on-ubuntu-20-04-focal-fossa-linux" target="_blank" rel="noopener">安装教程</a>。</p><p>激活码非常幸运地第一次尝试就成功了，<a href="https://bingfeng.tw/thread-621454-1-1.html" target="_blank" rel="noopener">感恩作者</a>。然后就可以安装并同时运行多系统了，快照与<a href="https://docs.vmware.com/cn/VMware-Workstation-Pro/12.0/com.vmware.ws.using.doc/GUID-AACE0935-4B43-43BA-A935-FC71ABA17803.html" target="_blank" rel="noopener">共享文件</a>非常方便，支持拖放功能。</p>]]></content>
      
      
      <categories>
          
          <category> 乐子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> PC </tag>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>整个网页</title>
      <link href="/le-zi/create-own-web/"/>
      <url>/le-zi/create-own-web/</url>
      
        <content type="html"><![CDATA[<p>豆瓣二月暂停日记功能时便萌生了自己整个主页的想法，在家圈着为了不看论文就动了折腾的心思，于是有了这个个人小站。</p><h2 id="环境设置"><a href="#环境设置" class="headerlink" title="环境设置"></a>环境设置</h2><p>想要搭建个人网站有很多方法，我是在Linux下通过Github+Hexo的方式创建，比较简单上手较快。首先当然是参考<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官网资料</a>，然后推荐<a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-11" target="_blank" rel="noopener">这篇教程</a>，感恩作者。除此之外Linux下还可以通过LNMP方式，Windows直接上WordPress都是选择。</p><h3 id="问题及应对"><a href="#问题及应对" class="headerlink" title="问题及应对"></a>问题及应对</h3><p>实操过程不可避免会遇到一些问题，在这里列出对应上文作者的步骤出现的问题及解决方案。</p><h4 id="2-安装npm"><a href="#2-安装npm" class="headerlink" title="2. 安装npm"></a>2. 安装npm</h4><p>没有使用过vim编辑器的话要先熟悉一下基本指令。输入i可直接进入insert模式进行profile编辑，ESC可回到控制模式，：wq可以对编辑后文档进行保存并退出。</p><h4 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3. 安装Hexo"></a>3. 安装Hexo</h4><p>无法调用npm指令，sudo后依然报错。</p><p>error: sudo npm command not found, EACCES permissions errors</p><p>解决：参考npm官网，<a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">Manually change npm’s default directory</a>，重装我试了没用，手动配置就好了。</p><p>Hexo安装好后调用hexo指令又报错无法找到指令，这里要注意再次调用</p><pre class=" language-bash"><code class="language-bash">$ <span class="token keyword">echo</span> -e <span class="token string">"export PATH=<span class="token variable"><span class="token variable">$(</span><span class="token function">npm</span> prefix -g<span class="token variable">)</span></span>/bin:<span class="token variable">$PATH</span>"</span> <span class="token operator">>></span> ~/.bashrc <span class="token operator">&amp;&amp;</span> <span class="token function">source</span> ~/.bashrc</code></pre><h4 id="6-Hexo部署到Github"><a href="#6-Hexo部署到Github" class="headerlink" title="6. Hexo部署到Github"></a>6. Hexo部署到Github</h4><p>按教程来，调用hexo命令时注意在创建的MyBlog根目录下执行。</p><h4 id="8-Markdown"><a href="#8-Markdown" class="headerlink" title="8. Markdown"></a>8. Markdown</h4><p>我是用VSCode对md文件进行编辑，如何操作我参考了<a href="https://zhuanlan.zhihu.com/p/56943330" target="_blank" rel="noopener">这里</a>。</p><hr><h2 id="设置更新与内容迁移"><a href="#设置更新与内容迁移" class="headerlink" title="设置更新与内容迁移"></a>设置更新与内容迁移</h2><p>来自半个月后的碎碎念：环境与主题配置好后的有一天我突然进不了笔记本的Ubuntu系统了，因为新PC的配件已经在路上我也懒得再去找解决方法了，只等在新机上重新配置环境。以下是过程。</p><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p>建议按照<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener"><strong>官网步骤</strong></a>来，更简洁方便，中间有不懂或出现问题可以再参考上面那篇博客。</p><p>新机是Ubuntu 20.04，没有npm局部安装，不必配置变量，过程依旧出现EACCES问题，遵循npmjs发布的<a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">指导</a>，使用官方推荐的Node version manager <a href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">(<strong>nvm</strong>)</a> 来重装即可，不需要上面那样手动配置，方便又快捷，具体指令参阅至Git install一节即可。</p><h3 id="问题及应对-1"><a href="#问题及应对-1" class="headerlink" title="问题及应对"></a>问题及应对</h3><p>世间安得一帆风顺之事。。</p><h4 id="1-本地源文件迁移"><a href="#1-本地源文件迁移" class="headerlink" title="1. 本地源文件迁移"></a>1. 本地源文件迁移</h4><p>Github上虽然已经作了同步部署，但当时没有上传本地源文件，需得从旧机中拷入。由于笔记本是双系统且Ubuntu已经进不去，Windows又不兼容EXT4，须得下载<strong>Linux Reader</strong>，注意不要下载到安装Ubuntu的系统盘上，就可以方便地访问并将需要的文件拷出。Ext2fsd另一个工具，我没有用过，谨作参考。</p><h4 id="2-重新设置SSH-Key"><a href="#2-重新设置SSH-Key" class="headerlink" title="2. 重新设置SSH Key"></a>2. 重新设置SSH Key</h4><p>为新机重新设置密钥，很重要，否则环境搭建好文件准备好也无法编辑。</p><p>这里有两篇文章作为<a href="https://www.jianshu.com/p/153490a029a5" target="_blank" rel="noopener">参考</a>，以及这个我还没做的<a href="https://juejin.im/post/5c2ee746e51d45524c7c9973" target="_blank" rel="noopener"><strong>安全迁移?</strong></a>。</p><h4 id="3-VSCode中文输入设置"><a href="#3-VSCode中文输入设置" class="headerlink" title="3. VSCode中文输入设置"></a>3. VSCode中文输入设置</h4><p>搜狗拼音还没出支持20.04的版本，我现在用ibus写得也是非常费劲了。然后打开VSCode发现无法切换中文输入法，难道要用英文写字嘛。。又是一番折腾：</p><p>首先安装官方版下载key并注入官网地址:</p><pre class=" language-bash"><code class="language-bash">$ curl https://packages.microsoft.com/keys/microsoft.asc <span class="token operator">|</span> gpg --dearmor <span class="token operator">></span> packages.microsoft.gpg$ <span class="token function">sudo</span> <span class="token function">install</span> -o root -g root -m 644 packages.microsoft.gpg /usr/share/keyrings/$ <span class="token function">sudo</span> sh -c <span class="token string">'echo "deb [arch=amd64 signed-by=/usr/share/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/vscode stable main" > /etc/apt/sources.list.d/vscode.list'</span></code></pre><p>然后获取VSCode并重新安装：</p><pre class=" language-bash"><code class="language-bash">$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> apt-transport-https$ <span class="token function">sudo</span> <span class="token function">apt-get</span> update$ <span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> code</code></pre><hr><h2 id="主题与个性化"><a href="#主题与个性化" class="headerlink" title="主题与个性化"></a>主题与个性化</h2><p>这一部分是一开始就做了一部分但至今还没有完成的，容后再禀😷。</p>]]></content>
      
      
      <categories>
          
          <category> 乐子 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
